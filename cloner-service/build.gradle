buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.netflix.nebula:gradle-ospackage-plugin:5.0.4"
    }
}

plugins {
    id "nebula.ospackage" version "5.0.4" apply true
    id "de.undercouch.download" version "3.4.3" apply true
}

// download bin
task downloadZipFile(type: Download) {
    src "https://github.com/buger/goreplay/releases/download/v${gorPackageVersion}/gor_${gorPackageVersion}_x64.tar.gz"
    dest new File("${projectDir}/.download", "gor_${gorPackageVersion}_x64.tar.gz")
    overwrite false
}

// unpack bin
task downloadAndUnzipFile(dependsOn: downloadZipFile, type: Copy) {
    from tarTree(resources.gzip(downloadZipFile.dest))
    into buildDir
}

ospackage {
    packageName = osPackageName
    version = osPackageVersion
    release = osPackageRelease
    os = LINUX
    user = 'root'
    permissionGroup = 'root'
    fileMode 0644

    // scripts
    preInstall file('scripts/preInstall.sh')
    preUninstall file('scripts/preUninstall.sh')
    postUninstall file('scripts/postUninstall.sh')

    // gor bin
    from("${buildDir}/goreplay") {
        into '/opt/cloner-service'
        fileType CONFIG | NOREPLACE

        user 'cloner-service'
        permissionGroup 'cloner-service'
        fileMode 0750
    }

    // bin
    from("cloner/cloner-service.py") {
        into '/opt/cloner-service'
        fileType CONFIG | NOREPLACE

        user 'cloner-service'
        permissionGroup 'cloner-service'
        fileMode 0755
    }
    link("/usr/bin/cloner-service", "/opt/cloner-service/cloner-service.py", 0755)

    // lib
    from("cloner") {
        into '/opt/cloner-service'
        exclude 'cloner-service.py'

        user 'cloner-service'
        permissionGroup 'cloner-service'
    }

    // config
    from("config/config.json") {
        into '/etc/cloner-service.d'
        fileType CONFIG | NOREPLACE

        user 'cloner-service'
        permissionGroup 'cloner-service'
        fileMode 0644
    }

    // init service
    from("service/cloner-service") {
        into '/etc/init.d'
        fileType CONFIG | NOREPLACE

        user 'root'
        permissionGroup 'root'
        fileMode 0755
    }

    // systemd service
    from("service/cloner-service.service") {
        into '/usr/lib/systemd/system'
        fileType CONFIG | NOREPLACE

        user 'root'
        permissionGroup 'root'
        fileMode 0644
    }
}

buildRpm {
    dependsOn downloadAndUnzipFile

    arch = 'X86_64'

    user = 'cloner-service'
    permissionGroup = 'cloner-service'

    addParentDirs true

    // requires
    requires('python34')
    requires('python34-virtualenv')

    // directories
    directory('/etc/cloner-service.d', 0644)
    directory('/opt/cloner-service', 0644)
    directory('/var/cloner-service', 0755)
    directory('/var/log/cloner-service', 0755)

    // scripts
    postInstall file('scripts/rpm/postInstall.sh')
}

buildDeb {
    dependsOn downloadAndUnzipFile

    arch = 'amd64'

    user = 'cloner-service'
    permissionGroup = 'cloner-service'

    addParentDirs true

    // requires
    requires('python3.4')
    requires('python3.4-venv')

    // directories
    directory('/etc/cloner-service.d', 0644)
    directory('/opt/cloner-service', 0644)
    directory('/var/cloner-service', 0755)
    directory('/var/log/cloner-service', 0755)

    // scripts
    postInstall file('scripts/deb/postInstall.sh')
}

task removeDebChanges(type: Delete) {
    dependsOn buildDeb

    delete "${buildDir}/distributions/${osPackageName}_${osPackageVersion}-${osPackageRelease}_amd64.changes"
    followSymlinks = true
}
